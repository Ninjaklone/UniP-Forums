<div class="container mt-4">
    <!-- Thread Header -->
    <div class="mb-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/forums">Forums</a></li>
                <li class="breadcrumb-item"><a href="/forums/<%= thread.forum_id %>"><%= thread.forum_name %></a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= thread.title %></li>
            </ol>
        </nav>

        <div class="d-flex justify-content-between align-items-start">
            <div>
                <h1 class="mb-2">
                    <% if (thread.is_sticky) { %>
                        <span class="badge bg-primary">Sticky</span>
                    <% } %>
                    <% if (thread.is_closed) { %>
                        <span class="badge bg-secondary">Closed</span>
                    <% } %>
                    <%= thread.title %>
                </h1>
                <p class="text-muted mb-0">
                    Started by <%= thread.author_name %>
                    â€¢ <%= new Date(thread.created_at).toLocaleString() %>
                </p>
                <% if (thread.tags && thread.tags.length > 0 && thread.tags[0] !== null) { %>
                    <div class="mt-2">
                        <% thread.tags.forEach(tag => { %>
                            <span class="badge bg-light text-dark me-1"><%= tag %></span>
                        <% }); %>
                    </div>
                <% } %>
            </div>
            <% if (locals.user?.is_admin) { %>
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        Manage Thread
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <button class="dropdown-item" onclick="toggleSticky()">
                                <%= thread.is_sticky ? 'Unsticky' : 'Sticky' %> Thread
                            </button>
                        </li>
                        <li>
                            <button class="dropdown-item" onclick="toggleClosed()">
                                <%= thread.is_closed ? 'Reopen' : 'Close' %> Thread
                            </button>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <button class="dropdown-item text-danger" onclick="deleteThread()">
                                Delete Thread
                            </button>
                        </li>
                    </ul>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Posts List -->
    <div class="posts">
        <% if (locals.posts && posts.length > 0) { %>
            <% posts.forEach((post, index) => { %>
                <div class="card mb-3 post" id="post-<%= post.post_id %>">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>
                            <strong><%= post.author_name %></strong>
                            <% if (post.is_admin) { %>
                                <span class="badge bg-danger ms-1">Admin</span>
                            <% } %>
                            <small class="text-muted ms-2">
                                <%= new Date(post.created_at).toLocaleString() %>
                                <% if (post.updated_at) { %>
                                    (edited)
                                <% } %>
                            </small>
                        </div>
                        <div>
                            <small class="text-muted">#<%= (currentPage - 1) * 20 + index + 1 %></small>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="post-content">
                            <%= post.content %>
                        </div>
                        <% if (locals.user && (user.id === post.user_id || user.is_admin)) { %>
                            <div class="mt-3 text-end">
                                <button class="btn btn-sm btn-outline-primary" onclick="editPost('<%- post.post_id %>')">
                                    Edit
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="deletePost('<%- post.post_id %>')">
                                    Delete
                                </button>
                            </div>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>

    <!-- Pagination -->
    <% if (locals.totalPages > 1) { %>
        <nav class="my-4">
            <ul class="pagination justify-content-center">
                <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                    <a class="page-link" href="/threads/<%= thread.thread_id %>?page=<%= currentPage - 1 %>">Previous</a>
                </li>
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="/threads/<%= thread.thread_id %>?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                    <a class="page-link" href="/threads/<%= thread.thread_id %>?page=<%= currentPage + 1 %>">Next</a>
                </li>
            </ul>
        </nav>
    <% } %>

    <!-- Reply Form -->
    <% if (locals.user && !thread.is_closed) { %>
        <div class="card mt-4">
            <div class="card-body">
                <h5 class="card-title">Reply to Thread</h5>
                <form action="/threads/<%= thread.thread_id %>/reply" method="POST">
                    <div class="mb-3">
                        <textarea class="form-control" name="content" rows="4" required 
                                placeholder="Write your reply here..."></textarea>
                    </div>
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary">Post Reply</button>
                    </div>
                </form>
            </div>
        </div>
    <% } else if (thread.is_closed) { %>
        <div class="alert alert-secondary mt-4">
            This thread is closed. New replies are not allowed.
        </div>
    <% } else { %>
        <div class="alert alert-info mt-4">
            Please <a href="/auth/login">login</a> to reply to this thread.
        </div>
    <% } %>
</div>

<% if (locals.user?.is_admin) { %>
<script>
function toggleSticky() {
    if (confirm('Are you sure you want to ' + 
        ('<%= thread.is_sticky %>' ? 'unsticky' : 'sticky') + ' this thread?')) {
        fetch('/threads/<%= thread.thread_id %>/sticky', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        }).then(() => location.reload());
    }
}

function toggleClosed() {
    if (confirm('Are you sure you want to ' + 
        ('<%= thread.is_closed %>' ? 'reopen' : 'close') + ' this thread?')) {
        fetch('/threads/<%= thread.thread_id %>/close', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        }).then(() => location.reload());
    }
}

function deleteThread() {
    if (confirm('Are you sure you want to delete this thread? This action cannot be undone.')) {
        fetch('/threads/<%= thread.thread_id %>', {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        }).then(() => window.location.href = '/forums/<%= thread.forum_id %>');
    }
}
</script>
<% } %>

<% if (locals.user) { %>
<script>
function editPost(postId) {
    const postDiv = document.querySelector(`#post-${postId} .post-content`);
    const content = postDiv.textContent.trim();
    
    postDiv.innerHTML = `
        <form onsubmit="saveEdit(event, ${postId})">
            <textarea class="form-control mb-2" rows="4" required>${content}</textarea>
            <div class="text-end">
                <button type="button" class="btn btn-sm btn-secondary" onclick="cancelEdit(${postId}, '${content}')">
                    Cancel
                </button>
                <button type="submit" class="btn btn-sm btn-primary ms-2">
                    Save Changes
                </button>
            </div>
        </form>
    `;
}

function cancelEdit(postId, content) {
    const postDiv = document.querySelector(`#post-${postId} .post-content`);
    postDiv.textContent = content;
}

function saveEdit(event, postId) {
    event.preventDefault();
    const form = event.target;
    const submitButton = form.querySelector('button[type="submit"]');
    const content = form.querySelector('textarea').value;
    
    // Disable form while submitting
    submitButton.disabled = true;
    submitButton.textContent = 'Saving...';
    
    fetch(`/posts/${postId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ content })
    })
    .then(response => {
        if (!response.ok) throw new Error('Failed to save changes');
        location.reload();
    })
    .catch(error => {
        alert('Error saving changes: ' + error.message);
        submitButton.disabled = false;
        submitButton.textContent = 'Save Changes';
    });
}

function deletePost(postId) {
    if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
        fetch(`/posts/${postId}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        }).then(() => location.reload());
    }
}
</script>
<% } %> 